{"version":3,"sources":["Assets/wallet-attention.gif","pages/Login/index.js","Redux/actions/index.js","Components/Header/index.js","Components/CategoriesSelect/index.js","Components/PayementsSelect/index.js","Components/ExpenseForm/index.js","Components/ExpenseItem/index.js","Components/ExpenseTable/index.js","Components/ValueInput/index.js","Components/DescriptionInput/index.js","Components/EditModal/index.js","pages/Wallet/index.js","Components/TagPieChart/index.js","Components/MethodPieChart/index.js","pages/Charts/index.js","App.js","Redux/reducers/user.js","Redux/reducers/wallet.js","Redux/reducers/index.js","Redux/store.js","index.js"],"names":["module","exports","Login","state","userEmail","userPassword","shouldRedirect","handleInputChange","bind","userVerify","handleSubmit","event","target","name","value","this","setState","addUser","props","to","className","src","wallet","alt","htmlFor","onChange","data-testid","type","id","onClick","disabled","React","Component","connect","dispatch","email","addUserToState","Header","expenses","reduce","accumulator","currentValue","currency","currentExchange","parseFloat","exchangeRates","ask","userState","length","totalExpenses","icon","faWallet","color","faChartPie","user","CategoriesSelect","func","PayementsSelect","ExpenseForm","Valor","Description","Moeda","method","tag","addExpense","addCurrencies","nextId","fetch","then","data","json","response","description","currencies","map","curr","key","faPlus","newcurrencies","Object","keys","filter","getCurrencies","newExpense","ID","addExpenses","ExpenseItem","expense","currencyObject","currencyName","split","convertedValue","currentChange","updateState","prevProps","removeExpense","showModal","editItemDispatch","toFixed","faPencilAlt","faTrashAlt","removeExpenses","editItem","ExpenseTable","showEditModal","ValueInput","DescriptionInput","EditModal","editItemID","find","submit","closeModal","changeItem","hideModal","newItem","editID","changeEditItem","Wallet","TagPieChart","totalTagExpenses","currentExpense","options","chart","styledMode","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","series","colorByPoint","y","highcharts","Highcharts","MethodPieChart","totalMethodExpenses","Charts","App","exact","path","component","INITIAL_STATE","action","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2eae9904.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet-attention.395f42dc.gif\";","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addUserToState } from '../../Redux/actions/index';\n\nimport './styles.css';\nimport wallet from '../../Assets/wallet-attention.gif';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = ({\n      userEmail: '',\n      userPassword: '',\n      shouldRedirect: false,\n    });\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.userVerify = this.userVerify.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  userVerify() {\n    const { userEmail, userPassword } = this.state;\n    return (userEmail !== 'alguem@email.com' || userPassword !== '123456');\n  }\n\n  handleSubmit() {\n    const { userEmail } = this.state;\n    const { addUser } = this.props;\n    addUser(userEmail);\n    this.setState({ shouldRedirect: true });\n  }\n\n  render() {\n    const { userEmail, userPassword, shouldRedirect } = this.state;\n\n    if (shouldRedirect) return <Redirect to=\"/carteira\" />;\n\n    return (\n      <main className=\"loginPage\">\n        <section className=\"container\">\n          <div className=\"gif\">\n            <img src={ wallet } alt=\"wallet\" />\n          </div>\n          <div className=\"input\">\n            <label htmlFor=\"userEmail\">\n              Email:\n              <input\n                onChange={ this.handleInputChange }\n                name=\"userEmail\"\n                value={ userEmail }\n                data-testid=\"email-input\"\n                type=\"text\"\n                id=\"userEmail\"\n              />\n            </label>\n          </div>\n          <div className=\"input\">\n            <label htmlFor=\"userPassword\">\n              Senha:\n              <input\n                onChange={ this.handleInputChange }\n                name=\"userPassword\"\n                value={ userPassword }\n                data-testid=\"password-input\"\n                type=\"text\"\n                id=\"userPassword\"\n              />\n            </label>\n          </div>\n          <button\n            onClick={ this.handleSubmit }\n            disabled={ this.userVerify() }\n            type=\"button\"\n          >\n            Entrar\n          </button>\n        </section>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  addUser: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addUser: (email) => dispatch(addUserToState(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","// Coloque aqui suas actions\nexport const addUserToState = (email) => ({ type: 'ADD_USER_EMAIL', email });\n\nexport const getCurrencies = (currencies) => ({ type: 'REQUEST_CURRENCIES', currencies });\n\nexport const addExpenses = (newExpense, ID) => ({ type: 'ADD_EXPENSE', newExpense, ID });\n\nexport const removeExpenses = (ID) => ({ type: 'REMOVE_EXPENSE', ID });\n\nexport const showEditModal = () => ({ type: 'SHOW_EDIT_MODAL' });\n\nexport const hideEditModal = () => ({ type: 'HIDE_EDIT_MODAL' });\n\nexport const editItem = (ID) => ({ type: 'EDIT_ITEM', ID });\n\nexport const changeEditItem = (expenses) => ({ type: 'CHANGE_EDIT_ITEM', expenses });\n\nexport const fetchCurrencies = () => (dispatch) => (\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((data) => data.json())\n    .then((response) => {\n      const currencies = Object.keys(response);\n      const newcurrencies = currencies.filter((curr) => curr !== 'USDT');\n      dispatch(getCurrencies(newcurrencies));\n    })\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartPie, faWallet } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css';\nimport wallet from '../../Assets/wallet-attention.gif';\n\nclass Header extends React.Component {\n  totalExpenses() {\n    const { expenses } = this.props;\n    return expenses.reduce((accumulator, currentValue) => {\n      const { currency } = currentValue;\n      const currentExchange = parseFloat(currentValue.exchangeRates[currency].ask);\n      return accumulator + (parseFloat(currentValue.value) * currentExchange);\n    }, 0);\n  }\n\n  render() {\n    const { userState, expenses } = this.props;\n    const { email } = userState;\n    return (\n      <header className=\"header\">\n        <div className=\"gifHeader\">\n          <img src={ wallet } alt=\"wallet\" />\n        </div>\n        <div className=\"userInfoContainer\">\n          <div className=\"userEmail\">\n            <h3>Email:</h3>\n            <p data-testid=\"email-field\">{ email }</p>\n          </div>\n          <div className=\"userExpenses\">\n            <h3>Despesas Totais:</h3>\n            <p data-testid=\"total-field\">\n              {'R$: '}\n              { expenses.length > 0 ? this.totalExpenses() : 0 }\n            </p>\n          </div>\n          <div className=\"userExchange\">\n            <h3>Câmbio Utilizado:</h3>\n            <p data-testid=\"header-currency-field\">BRL</p>\n          </div>\n        </div>\n        <div>\n          <Link to=\"/carteira\">\n            <button type=\"button\">\n              <FontAwesomeIcon icon={ faWallet } color=\"rgb(222, 221, 228)\" />\n            </button>\n          </Link>\n          <Link to=\"/charts\">\n            <button type=\"button\">\n              <FontAwesomeIcon icon={ faChartPie } color=\"rgb(222, 221, 228)\" />\n            </button>\n          </Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userState: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  expenses: PropTypes.arrayOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userState: state.user,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nclass CategoriesSelect extends React.Component {\n  render() {\n    const { func, value } = this.props;\n    return (\n      <label htmlFor=\"tag\">\n        Tag:\n        <select\n          data-testid=\"tag-input\"\n          onChange={ func }\n          value={ value }\n          id=\"tag\"\n          name=\"tag\"\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nCategoriesSelect.propTypes = {\n  func: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default CategoriesSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass PayementsSelect extends React.Component {\n  render() {\n    const { func, value } = this.props;\n    return (\n      <label htmlFor=\"method\">\n        Método de pagamento:\n        <select\n          data-testid=\"method-input\"\n          onChange={ func }\n          value={ value }\n          id=\"method\"\n          name=\"method\"\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nPayementsSelect.propTypes = {\n  func: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default PayementsSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { fetchCurrencies, addExpenses } from '../../Redux/actions/index';\n\nimport CategoriesSelect from '../CategoriesSelect';\nimport PayementsSelect from '../PayementsSelect';\n\nimport './styles.css';\n\nclass ExpenseForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Valor: '',\n      Description: '',\n      Moeda: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addExpense = this.addExpense.bind(this);\n  }\n\n  componentDidMount() {\n    const { addCurrencies } = this.props;\n    addCurrencies();\n  }\n\n  handleInputChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addExpense() {\n    const { Valor, Description, Moeda, method, tag } = this.state;\n    const { nextId, addExpense } = this.props;\n\n    fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((data) => data.json())\n      .then((response) => {\n        const newExpense = {\n          id: nextId,\n          value: Valor,\n          description: Description,\n          currency: Moeda,\n          method,\n          tag,\n          exchangeRates: response,\n        };\n        addExpense(newExpense, nextId);\n      });\n\n    this.setState({\n      Valor: '',\n      Description: '',\n      Moeda: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { Valor, Description, Moeda, method, tag } = this.state;\n    return (\n      <form className=\"expenseForm\">\n        <label className=\"valueLabel\" htmlFor=\"Valor\">\n          Valor:\n          <input\n            onChange={ this.handleInputChange }\n            value={ Valor }\n            id=\"Valor\"\n            className=\"small\"\n            type=\"text\"\n            name=\"Valor\"\n          />\n        </label>\n        <label className=\"descriptionLabel\" htmlFor=\"Description\">\n          Descrição:\n          <input\n            onChange={ this.handleInputChange }\n            value={ Description }\n            id=\"Description\"\n            type=\"text\"\n            name=\"Description\"\n          />\n        </label>\n        <label htmlFor=\"Moeda\">\n          Moeda:\n          <select\n            onChange={ this.handleInputChange }\n            value={ Moeda }\n            id=\"Moeda\"\n            name=\"Moeda\"\n          >\n            {currencies.map(\n              (curr) => <option key={ curr } value={ curr }>{curr}</option>,\n            )}\n          </select>\n        </label>\n        <PayementsSelect func={ this.handleInputChange } value={ method } />\n        <CategoriesSelect func={ this.handleInputChange } value={ tag } />\n        <button onClick={ this.addExpense } type=\"button\">\n          <FontAwesomeIcon icon={ faPlus } color=\"rgb(222, 221, 228)\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  addCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(Object).isRequired,\n  nextId: PropTypes.number.isRequired,\n  addExpense: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCurrencies: () => dispatch(fetchCurrencies()),\n  addExpense: (newExpense, ID) => dispatch(addExpenses(newExpense, ID)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  nextId: state.wallet.nextId,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { removeExpenses, showEditModal, editItem } from '../../Redux/actions/index';\n\nimport './styles.css';\n\nclass ExpenseItem extends React.Component {\n  constructor(props) {\n    super(props);\n    const { expense } = this.props;\n    const { id, description, tag, method, value, currency, exchangeRates } = expense;\n    const currencyObject = exchangeRates[currency];\n    const currencyName = (currencyObject.name).split('/')[0];\n    const convertedValue = value * currencyObject.ask;\n\n    this.state = {\n      id,\n      description,\n      tag,\n      method,\n      value,\n      currencyName,\n      currentChange: currencyObject.ask,\n      convertedValue,\n    };\n\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { expense } = this.props;\n    if (expense !== prevProps.expense) {\n      this.updateState(expense);\n    }\n  }\n\n  updateState(expense) {\n    const { id, description, tag, method, value, currency, exchangeRates } = expense;\n    const currencyObject = exchangeRates[currency];\n    const currencyName = (currencyObject.name).split('/')[0];\n    const convertedValue = value * currencyObject.ask;\n\n    this.setState({\n      id,\n      description,\n      tag,\n      method,\n      value,\n      currencyName,\n      currentChange: currencyObject.ask,\n      convertedValue,\n    });\n  }\n\n  render() {\n    const { removeExpense, showModal, editItemDispatch } = this.props;\n    const {\n      id,\n      description,\n      tag,\n      method,\n      value,\n      currencyName,\n      currentChange,\n      convertedValue } = this.state;\n\n    return (\n      <tr>\n        <td>{ description }</td>\n        <td>{ tag }</td>\n        <td>{ method }</td>\n        <td>{ value }</td>\n        <td>{ currencyName }</td>\n        <td>{ parseFloat(currentChange).toFixed(2) }</td>\n        <td>{ parseFloat(convertedValue).toFixed(2) }</td>\n        <td>Real</td>\n        <td>\n          <button\n            onClick={ () => {\n              editItemDispatch(id);\n              showModal();\n            } }\n            className=\"edit-btn\"\n            data-testid=\"edit-btn\"\n            type=\"button\"\n          >\n            <FontAwesomeIcon icon={ faPencilAlt } color=\"rgb(222, 221, 228)\" />\n          </button>\n          <button\n            data-testid=\"delete-btn\"\n            className=\"delete-btn\"\n            onClick={ () => removeExpense(id) }\n            type=\"button\"\n          >\n            <FontAwesomeIcon icon={ faTrashAlt } color=\"rgb(222, 221, 228)\" />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nExpenseItem.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    exchangeRates: PropTypes.arrayOf(Object).isRequired,\n  }).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  showModal: PropTypes.func.isRequired,\n  editItemDispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (ID) => dispatch(removeExpenses(ID)),\n  showModal: () => dispatch(showEditModal()),\n  editItemDispatch: (ID) => dispatch(editItem(ID)),\n});\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ExpenseItem from '../ExpenseItem';\n\nimport './styles.css';\n\nclass ExpenseTable extends React.Component {\n  render() {\n    const { expenses } = this.props;\n    return (\n      <main className=\"expenseTable\">\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses\n              .map((expense) => <ExpenseItem key={ expense.id } expense={ expense } />)}\n          </tbody>\n        </table>\n\n      </main>\n    );\n  }\n}\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.arrayOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  showEditModal: state.wallet.showEditModal,\n});\n\nexport default connect(mapStateToProps)(ExpenseTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ValueInput extends React.Component {\n  render() {\n    const { func, value } = this.props;\n    return (\n      <label htmlFor=\"value\">\n        Valor:\n        <input\n          onChange={ func }\n          value={ value }\n          id=\"value\"\n          type=\"text\"\n          name=\"value\"\n          data-testid=\"value-input\"\n        />\n      </label>\n    );\n  }\n}\n\nValueInput.propTypes = {\n  func: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default ValueInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass DescriptionInput extends React.Component {\n  render() {\n    const { func, value } = this.props;\n    return (\n      <label htmlFor=\"description\">\n        Descrição:\n        <input\n          onChange={ func }\n          value={ value }\n          id=\"description\"\n          type=\"text\"\n          name=\"description\"\n          data-testid=\"description-input\"\n        />\n      </label>\n    );\n  }\n}\n\nDescriptionInput.propTypes = {\n  func: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default DescriptionInput;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeEditItem, hideEditModal } from '../../Redux/actions/index';\n\nimport CategoriesSelect from '../CategoriesSelect';\nimport PayementsSelect from '../PayementsSelect';\nimport ValueInput from '../ValueInput';\nimport DescriptionInput from '../DescriptionInput';\n\nimport './styles.css';\n\nclass EditModal extends React.Component {\n  constructor(props) {\n    super(props);\n    const { expenses, editItemID } = this.props;\n\n    const editItem = expenses.find((expense) => expense.id === editItemID);\n\n    const { value, description, currency, method, tag } = editItem;\n\n    this.state = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  handleInputChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  submit() {\n    const { expenses, editItemID, changeItem, hideModal } = this.props;\n    const editItem = expenses.find((expense) => expense.id === editItemID);\n    const newItem = { ...editItem, ...this.state };\n    expenses[editItemID] = newItem;\n    changeItem(expenses);\n    hideModal();\n  }\n\n  closeModal() {\n    const { hideModal } = this.props;\n    hideModal();\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <div className=\"modal\">\n        <div className=\"modalContent\">\n          <h2>Editar Item</h2>\n          <form>\n            <ValueInput func={ this.handleInputChange } value={ value } />\n            <DescriptionInput func={ this.handleInputChange } value={ description } />\n            <label htmlFor=\"currency\">\n              Moeda:\n              <select\n                onChange={ this.handleInputChange }\n                value={ currency }\n                id=\"currency\"\n                name=\"currency\"\n                data-testid=\"currency-input\"\n              >\n                {currencies.map(\n                  (curr) => <option key={ curr } value={ curr }>{curr}</option>,\n                )}\n              </select>\n            </label>\n            <PayementsSelect func={ this.handleInputChange } value={ method } />\n            <CategoriesSelect func={ this.handleInputChange } value={ tag } />\n            <div className=\"actionButtons\">\n              <button\n                className=\"editExpense\"\n                onClick={ this.submit }\n                type=\"button\"\n              >\n                Editar despesa\n              </button>\n              <button\n                className=\"cancelEdit\"\n                onClick={ this.closeModal }\n                type=\"button\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditModal.propTypes = {\n  currencies: PropTypes.arrayOf(Object).isRequired,\n  expenses: PropTypes.arrayOf(Object).isRequired,\n  editItemID: PropTypes.number.isRequired,\n  changeItem: PropTypes.func.isRequired,\n  hideModal: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeItem: (expenses) => dispatch(changeEditItem(expenses)),\n  hideModal: () => dispatch(hideEditModal()),\n});\n\nconst mapStateToProps = (state) => ({\n  editItemID: state.wallet.editID,\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Header from '../../Components/Header';\nimport ExpenseForm from '../../Components/ExpenseForm';\nimport ExpenseTable from '../../Components/ExpenseTable';\nimport EditModal from '../../Components/EditModal';\n\nimport './styles.css';\n\nclass Wallet extends React.Component {\n  render() {\n    const { showEditModal } = this.props;\n    return (\n      <div className=\"wallet\">\n        <Header />\n        { !showEditModal && <ExpenseForm /> }\n        <ExpenseTable />\n        { showEditModal && <EditModal /> }\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  showEditModal: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  showEditModal: state.wallet.showEditModal,\n});\n\nexport default connect(mapStateToProps)(Wallet);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport './styles.css';\n\nclass TagPieChart extends React.Component {\n  constructor() {\n    super();\n    this.totalExpenses = this.totalExpenses.bind(this);\n    this.totalTagExpenses = this.totalTagExpenses.bind(this);\n  }\n\n  totalExpenses() {\n    const { expenses } = this.props;\n    if (expenses !== []) {\n      return expenses.reduce((accumulator, currentValue) => {\n        const { currency } = currentValue;\n        const currentExchange = parseFloat(currentValue.exchangeRates[currency].ask);\n        return (accumulator + (parseFloat(currentValue.value) * currentExchange));\n      }, 0);\n    }\n    return 1;\n  }\n\n  totalTagExpenses(tag) {\n    const { expenses } = this.props;\n    if (expenses !== []) {\n      const tagExpenses = expenses.filter((expense) => expense.tag === tag);\n      return tagExpenses.reduce((accumulator, currentExpense) => {\n        const { currency } = currentExpense;\n        const currentExchange = parseFloat(currentExpense.exchangeRates[currency].ask);\n        return accumulator + (parseFloat(currentExpense.value) * currentExchange);\n      }, 0);\n    }\n    return 0;\n  }\n\n  render() {\n    const options = {\n      chart: {\n        styledMode: true,\n        type: 'pie',\n      },\n      title: { text: 'Despesas por Tag' },\n      tooltip: { pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>' },\n      accessibility: { point: { valueSuffix: '%' } },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n          },\n        },\n      },\n      series: [{\n        name: 'Brands',\n        colorByPoint: true,\n        data: [{\n          name: 'Alimentação',\n          y: (this.totalTagExpenses('Alimentação') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Trabalho',\n          y: (this.totalTagExpenses('Trabalho') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Lazer',\n          y: (this.totalTagExpenses('Lazer') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Transporte',\n          y: (this.totalTagExpenses('Transporte') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Saúde',\n          y: (this.totalTagExpenses('Saúde') / this.totalExpenses()) * 100,\n        }],\n      }],\n    };\n    return (\n      <div className=\"tagChart\">\n        <HighchartsReact highcharts={ Highcharts } options={ options } />\n      </div>\n    );\n  }\n}\n\nTagPieChart.propTypes = {\n  expenses: PropTypes.arrayOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(TagPieChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport './styles.css';\n\nclass MethodPieChart extends React.Component {\n  constructor() {\n    super();\n    this.totalExpenses = this.totalExpenses.bind(this);\n    this.totalMethodExpenses = this.totalMethodExpenses.bind(this);\n  }\n\n  totalExpenses() {\n    const { expenses } = this.props;\n    if (expenses !== []) {\n      return expenses.reduce((accumulator, currentValue) => {\n        const { currency } = currentValue;\n        const currentExchange = parseFloat(currentValue.exchangeRates[currency].ask);\n        return (accumulator + (parseFloat(currentValue.value) * currentExchange));\n      }, 0);\n    }\n    return 1;\n  }\n\n  totalMethodExpenses(method) {\n    const { expenses } = this.props;\n    if (expenses !== []) {\n      const methodExpenses = expenses.filter((expense) => expense.method === method);\n      return methodExpenses.reduce((accumulator, currentExpense) => {\n        const { currency } = currentExpense;\n        const currentExchange = parseFloat(currentExpense.exchangeRates[currency].ask);\n        return accumulator + (parseFloat(currentExpense.value) * currentExchange);\n      }, 0);\n    }\n    return 0;\n  }\n\n  render() {\n    const options = {\n      chart: {\n        styledMode: true,\n        type: 'pie',\n      },\n      title: { text: 'Despesas por Método de Pagamento' },\n      tooltip: { pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>' },\n      accessibility: { point: { valueSuffix: '%' } },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n          },\n        },\n      },\n      series: [{\n        name: 'Brands',\n        colorByPoint: true,\n        data: [{\n          name: 'Dinheiro',\n          y: (this.totalMethodExpenses('Dinheiro') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Cartão de crédito',\n          y: (this.totalMethodExpenses('Cartão de crédito') / this.totalExpenses()) * 100,\n        }, {\n          name: 'Cartão de débito',\n          y: (this.totalMethodExpenses('Cartão de débito') / this.totalExpenses()) * 100,\n        }],\n      }],\n    };\n    return (\n      <div className=\"methodChart\">\n        <HighchartsReact highcharts={ Highcharts } options={ options } />\n      </div>\n    );\n  }\n}\n\nMethodPieChart.propTypes = {\n  expenses: PropTypes.arrayOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(MethodPieChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './styles.css';\n\nimport Header from '../../Components/Header';\nimport TagPieChart from '../../Components/TagPieChart';\nimport MethodPieChart from '../../Components/MethodPieChart';\n\nclass Charts extends React.Component {\n  render() {\n    return (\n      <main className=\"chartsPage\">\n        <Header />\n        <TagPieChart />\n        <MethodPieChart />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Charts);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport Charts from './pages/Charts';\n\nfunction App() {\n  return (\n    <div className=\"mainPage\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n        <Route exact path=\"/charts\" component={ Charts } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'ADD_USER_EMAIL':\n    return { ...state, email: action.email };\n\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  nextId: 0,\n  showEditModal: false,\n  editID: null,\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'REQUEST_CURRENCIES':\n    return { ...state, currencies: action.currencies };\n\n  case 'ADD_EXPENSE':\n    return { ...state,\n      expenses: [...state.expenses, action.newExpense],\n      nextId: action.ID + 1 };\n\n  case 'REMOVE_EXPENSE':\n    return { ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.ID) };\n\n  case 'SHOW_EDIT_MODAL':\n    return { ...state, showEditModal: true };\n\n  case 'HIDE_EDIT_MODAL':\n    return { ...state, showEditModal: false };\n\n  case 'EDIT_ITEM':\n    return { ...state, editID: action.ID };\n\n  case 'CHANGE_EDIT_ITEM':\n    return { ...state, expenses: action.expenses, editID: null };\n\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n// import wallet  from './wallet';\n\nconst reducer = combineReducers({ user, wallet });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}